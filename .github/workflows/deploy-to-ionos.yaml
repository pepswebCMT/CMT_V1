# Please do not edit this file.
# More information under https://docs.ionos.space/docs/github-actions-customization/
# version: 2022-07-21

name: "Deploy Now: Deploy to IONOS"

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
      project-id:
        required: true
        type: string
      branch-id:
        required: true
        type: string
      deployment-ids:
        required: true
        type: string
        default: '["default-id"]' # ✅ Valeur par défaut pour éviter l'erreur JSON
  push:
    branches:
      - master
      - dev

env:
  PROJECT_ID: ${{ secrets.IONOS_PROJECT_ID || '1764d17f-7ef4-4bc3-8597-08b489757b55' }} # Remplace par ton vrai project ID IONOS

concurrency: ${{ github.ref }}

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      deployment-ids: ${{ steps.set-ids.outputs.deployment-ids }}
    steps:
      - name: Vérifier `inputs.deployment-ids`
        run: echo "Valeur reçue pour deployment-ids:'' '${{ inputs.deployment-ids }}'"

      - name: Générer un deployment-id si vide
        id: set-ids
        run: |
          if [ -z "${{ inputs.deployment-ids }}" ]; then
            UUID=$(uuidgen)
            echo "Génération d'un nouveau deployment-id: $UUID"
            echo "deployment-ids=[\"$UUID\"]" >> $GITHUB_ENV
            echo "deployment-ids=[\"$UUID\"]" >> $GITHUB_OUTPUT
          else
            echo "deployment-ids=${{ inputs.deployment-ids }}" >> $GITHUB_ENV
            echo "deployment-ids=${{ inputs.deployment-ids }}" >> $GITHUB_OUTPUT
          fi

      - name: Debug DEPLOYMENT_IDS
        run: echo "Deployment IDs générés:'' '${{ env.DEPLOYMENT_IDS }}'"

  deploy-to-ionos:
    needs: prepare-matrix
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
    strategy:
      matrix:
        deployment-id: ${{ fromJson(needs.prepare-matrix.outputs.deployment-ids) }}
    steps:
      - name: Debug deployment-id
        run: echo "Deployment ID utilisé:'' '${{ matrix.deployment-id }}'"
      - name: Debug project-id
        run: echo "Project ID utilisé:'' '${{ env.PROJECT_ID }}'"
      - name: Debug branch-id
        run: echo "Branch ID utilisé:'' '${{ inputs.branch-id }}'"

      - name: Update deployment status
        uses: ionos-deploy-now/project-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ env.PROJECT_ID }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: update-status
          status: in_progress

      - name: Retrieve stored deployment
        uses: ionos-deploy-now/artifact-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ env.PROJECT_ID }}
          branch-id: ${{ inputs.branch-id }}
          version: ${{ inputs.version }}
          action: download

      - name: Fetch deployment info
        uses: ionos-deploy-now/project-action@v1
        id: deployment
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ env.PROJECT_ID }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: retrieve-info

      - name: Render templates
        uses: ionos-deploy-now/template-renderer-action@v2
        id: template
        with:
          deployment-id: ${{ matrix.deployment-id }}
          data: "[${{ steps.deployment.outputs.template-variables }}, ${{ toJson(secrets) }}]"
          input-directory: deployment
          output-directory: deployment
          intermediate-data-file: deployment/.template-renderer-data

      - name: Render real site-url to all files
        run: |
          for file in $(grep -rl 'https://IONOS_DEPLOY_NOW_SITE_URL' .); do
            sed -i "s|https://IONOS_DEPLOY_NOW_SITE_URL|${{ fromJson(steps.deployment.outputs.info).site-url }}|g" "$file"
          done

      - name: Render SSH user secret name
        run: echo SSH_USERNAME_SECRET=IONOS_DEPLOYMENT_$(echo ${{ matrix.deployment-id }} | tr '[:lower:]' '[:upper:]' | tr '-' '_' )_SSH_USERNAME >> $GITHUB_ENV

      - name: Deploy to IONOS
        uses: ionos-deploy-now/deploy-to-ionos-action@v2
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ env.PROJECT_ID }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          deployment-info: ${{ steps.deployment.outputs.info }}
          ssh-user: ${{ secrets[env.SSH_USERNAME_SECRET] }}
          ssh-key: ${{ secrets.IONOS_SSH_KEY }}

      - name: Update deployment status
        if: ${{ always() }}
        uses: ionos-deploy-now/project-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ env.PROJECT_ID }}
          branch-id: ${{ inputs.branch-id }}
          deployment-id: ${{ matrix.deployment-id }}
          action: update-status
          status: ${{ job.status }}

  notify-deployment-finished:
    needs: deploy-to-ionos
    if: ${{ github.event_name == 'workflow_dispatch' && always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Notify all deployments finished
        uses: ionos-deploy-now/project-action@v1
        with:
          api-key: ${{ secrets.IONOS_API_KEY }}
          service-host: api-eu.ionos.space
          project-id: ${{ env.PROJECT_ID }}
          branch-id: ${{ inputs.branch-id }}
          action: set-deployments-finished
